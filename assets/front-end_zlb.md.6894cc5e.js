import{o as n,c as s,b as a}from"./app.d5b2ad57.js";const t='{"title":"浙里办开发指南","description":"","frontmatter":{"title":"浙里办开发指南"},"headers":[{"level":2,"title":"mgop.js","slug":"mgop-js"}],"relativePath":"front-end/zlb.md","lastUpdated":1646271371696}',p={},o=a('<h1 id="浙里办嵌入前端h5微应用避坑指南"><a class="header-anchor" href="#浙里办嵌入前端h5微应用避坑指南" aria-hidden="true">#</a> 浙里办嵌入前端h5微应用避坑指南</h1><p>1，vue生产包请求静态资源报302，先排查部署到平台的.zip包中dist文件夹是否重命名为build，并且根目录必须有支持npm run build命令的package.json文件（尽量在本地打包完，将生产包按上述目录归放。不直接把src源代码压缩后使用平台支持的npm install &amp; npm run build方式部署），最后请平台同事确认当前应用属于外网还是浙里办内网，如果要通过浙里办或支付宝扫码方式访问微应用需要切回内网。</p><p>2，回调地址和部署版本号问题。一般情况下每次部署需要手动把版本号改成一个最新的。如果已经接入了sso单点登录或其它有回调交互介入，则平台同事配置的回调地址版本号不会跟随最新版本号再自动更新，测试阶段,部署版本时，需要重复使用当前版本号，保持和回调地址的版本号一致。</p><p>3，回调地址参数获取问题。oss登录回调地址 <a href="http://xxxx.gov.cn/1.1.0/index.html?ticket=123456#/home" target="_blank" rel="noopener noreferrer">xxxx.gov.cn/1.1.0/index.html?ticket=123456#/home</a> 无法在/home路由通过$route直接获取到，可以使用window.location截取或者找平台同学@俞锦涛优化回调地址。</p><p>4，迁移到浙里办内网后axios请求改mgop请求，入参选项转换，封装支持promise回调。zlb/mgop.js</p><p>5，采集埋点 报错ZWJSBridge找不到 动态创建script引入js 联调阶段https改为http， 标签头信息声明<meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests"> ，延迟初始化ZWJSBridge对象。</p><h2 id="mgop-js"><a class="header-anchor" href="#mgop-js" aria-hidden="true">#</a> <code>mgop.js</code></h2><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> mgop<span class="token punctuation">,</span> setDefaultHeader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aligov/jssdk-mgop&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Toast <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vant&#39;</span>\n\n<span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token punctuation">{</span>\n  host<span class="token operator">:</span> <span class="token string">&#39;https://mapi.zjzwfw.gov.cn/&#39;</span><span class="token punctuation">,</span>\n  api<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n  type<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>\n  dataType<span class="token operator">:</span> <span class="token string">&#39;JSON&#39;</span><span class="token punctuation">,</span>\n  appKey<span class="token operator">:</span> <span class="token string">&#39;xxxxx+00000+xxxxx&#39;</span><span class="token punctuation">,</span>\n  data<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  header<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  timeout<span class="token operator">:</span> <span class="token number">10000</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">zlbRequest</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  params<span class="token punctuation">.</span>type <span class="token operator">=</span> config<span class="token punctuation">.</span>method\n  params<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>config<span class="token punctuation">.</span>data<span class="token punctuation">,</span> <span class="token operator">...</span>config<span class="token punctuation">.</span>params <span class="token punctuation">}</span>\n  <span class="token keyword">const</span> opt <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> config<span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token function">mgop</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token operator">...</span>opt<span class="token punctuation">,</span>\n      <span class="token function-variable function">onSuccess</span><span class="token operator">:</span> <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 设置默认头信息</span>\n        <span class="token comment">// setDefaultHeader({</span>\n        <span class="token comment">//   token: res.data.token</span>\n        <span class="token comment">// })</span>\n\n        <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">onFail</span><span class="token operator">:</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        Toast<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>err<span class="token punctuation">.</span>data<span class="token punctuation">.</span>response<span class="token punctuation">.</span>status<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>err<span class="token punctuation">.</span>data<span class="token punctuation">.</span>response<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 引用方式</span>\n<span class="token comment">// import mgopRequest from &quot;@/utils/mgop&quot;</span>\n\n<span class="token comment">// export function getTodoList(data) {</span>\n<span class="token comment">//   return mgopRequest({</span>\n<span class="token comment">//     api: &#39;mgop.watone.lawmzs.todoList&#39;,</span>\n<span class="token comment">//     url: &#39;/mgr/Problem/todoList&#39;,</span>\n<span class="token comment">//     method: &#39;post&#39;,</span>\n<span class="token comment">//     params: data</span>\n<span class="token comment">//   })</span>\n<span class="token comment">// }</span>\n</code></pre></div>',8);p.render=function(a,t,p,e,c,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
