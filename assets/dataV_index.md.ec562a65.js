import{o as n,c as s,b as a}from"./app.c212677f.js";const t='{"title":"大屏 开发指南","description":"","frontmatter":{"title":"大屏 开发指南"},"relativePath":"dataV/index.md","lastUpdated":1702283030081}',p={},o=a('<h1 id="大屏-开发指南"><a class="header-anchor" href="#大屏-开发指南" aria-hidden="true">#</a> 大屏 开发指南</h1><blockquote><p>大屏开发过程中,需要遵循以下规范</p></blockquote><div class="language-js"><pre><code><span class="token number">1.</span> 大屏采用三块开发<span class="token punctuation">,</span>分为左中右\n<span class="token number">2.</span> 采用echarts<span class="token punctuation">,</span>rem<span class="token punctuation">,</span>flex<span class="token punctuation">,</span>grid布局\n<span class="token number">3.</span> 公<span class="token number">3</span><span class="token operator">*</span><span class="token number">7</span>个<span class="token number">1080</span><span class="token operator">*</span><span class="token number">1920</span>个屏幕 开发分辨率左<span class="token number">1280</span><span class="token operator">*</span><span class="token number">1080</span>  中 <span class="token number">1920</span><span class="token operator">*</span><span class="token number">1080</span> 右<span class="token number">1280</span><span class="token operator">*</span><span class="token number">1080</span>\n<span class="token number">4.</span> 在开发时需要在src<span class="token operator">/</span>views<span class="token operator">/</span>dataV 文件夹下建文件夹下面有index<span class="token punctuation">.</span>vue文件<span class="token punctuation">,</span>调试时访问<span class="token operator">/</span>dataV<span class="token operator">/</span>big<span class="token operator">/</span>对应文件夹名称 <span class="token punctuation">,</span>最终在巨屏展示时需要访问<span class="token operator">/</span>dataV<span class="token operator">/</span>big<span class="token operator">/</span>左屏文件夹名称<span class="token operator">/</span>中屏文件夹名称<span class="token operator">/</span>右屏文件夹名称  组成大屏页面<span class="token punctuation">,</span>无需再新增路由<span class="token punctuation">,</span>文件夹名称可变化\n<span class="token number">5.</span> 图标<span class="token punctuation">,</span>折线图<span class="token punctuation">,</span>柱状图尽量封装<span class="token punctuation">,</span>字体做自适应\n<span class="token number">6.</span> 所涉及字体在小于等于<span class="token number">1920</span><span class="token operator">*</span><span class="token number">1080</span>比例为<span class="token number">100</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>当大于<span class="token number">1920</span><span class="token operator">*</span><span class="token number">1080</span>算法为当前width <span class="token operator">/</span> <span class="token number">44.8</span>\n<span class="token number">7.</span> 组件写样式必须添加<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">scoped</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>避免污染其他相似文件\n<span class="token number">8.</span> 图表字体混入<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">this.nowSize(12)</span><span class="token template-punctuation string">`</span></span>方法<span class="token punctuation">,</span>横纵坐标图例均采用<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">12</span><span class="token template-punctuation string">`</span></span>号字\n<span class="token number">9.</span> 把图表文件抽离<span class="token punctuation">,</span>数据<span class="token punctuation">,</span>图表配置在组件里做<span class="token punctuation">,</span>外层只做数据接入<span class="token punctuation">,</span>减少当前文件长度<span class="token punctuation">,</span>提高可读性\n<span class="token number">10.</span> 当数据接口没有或者调用失败需要<span class="token punctuation">,</span>需要写入假数据<span class="token punctuation">,</span>图标不能为空\n<span class="token number">11.</span> 接口调用统一采用<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">this.$api</span><span class="token template-punctuation string">`</span></span>形式<span class="token punctuation">,</span>单独请求<span class="token punctuation">,</span>不要一个接口挂<span class="token punctuation">,</span>所有图表展示不出来\n</code></pre></div><blockquote><p>[废弃]监督结果跳转到监督对象详情</p></blockquote><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>templateDetail</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>templateDetail<span class="token punctuation">&quot;</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>监督对象详情<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DonateDetail</span> <span class="token attr-name">:id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:isDataV</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>templateDetail</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="language-js"><pre><code><span class="token comment">// table里面跳转到监督对象详情,添加一列</span>\n<span class="token punctuation">{</span>\n  title<span class="token operator">:</span> <span class="token string">&#39;预警关联监察对象&#39;</span><span class="token punctuation">,</span>\n  dataIndex<span class="token operator">:</span> <span class="token string">&#39;warningResult&#39;</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">customRender</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> row<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token keyword">const</span> h <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$createElement\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$strRegSupervisedObject</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$strRegSupervisedObject</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n          <span class="token function">h</span><span class="token punctuation">(</span>\n            <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              on<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token function-variable function">click</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;openDetail&#39;</span><span class="token punctuation">,</span>item<span class="token punctuation">)</span>\n                <span class="token punctuation">}</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            item<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> item<span class="token punctuation">.</span>idCard\n          <span class="token punctuation">)</span>\n        <span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><div class="language-js"><pre><code> <span class="token comment">// 通过姓名和身份证号查询id</span>\n    <span class="token function">handleDetail</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$api<span class="token punctuation">.</span><span class="token function">queryIdByCardAndNameApi</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> item<span class="token punctuation">.</span>name<span class="token punctuation">,</span> sfz<span class="token operator">:</span> item<span class="token punctuation">.</span>idCard <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>id\n          <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>templateDetail<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;暂未查到当前人员&#39;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre></div><blockquote><p>文字超长处理</p></blockquote><div class="language-js"><pre><code><span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;主要问题情节&#39;</span><span class="token punctuation">,</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">&#39;zywtqj&#39;</span><span class="token punctuation">,</span>\n    hidden<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">customRender</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> row<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> h <span class="token operator">=</span> props<span class="token punctuation">.</span>$createElement\n      <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;a-tooltip&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        attrs<span class="token operator">:</span> <span class="token punctuation">{</span>\n          title<span class="token operator">:</span> text<span class="token punctuation">,</span>\n          placement<span class="token operator">:</span> <span class="token string">&#39;left&#39;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n</code></pre></div><ul><li>对应的<code>index</code>文件需要接收</li></ul><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>punishTable</span> <span class="token attr-name">:flag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flag<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@openDetail</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$emit(<span class="token punctuation">&#39;</span>openDetail<span class="token punctuation">&#39;</span>, $event)<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre></div><h4 id="字体-echarts-写法"><a class="header-anchor" href="#字体-echarts-写法" aria-hidden="true">#</a> 字体 Echarts 写法</h4><blockquote><p>全局引入</p></blockquote><div class="language-js"><pre><code>fontSize<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nowSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>\n</code></pre></div>',14);p.render=function(a,t,p,e,c,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
